import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.callit"
        minSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    productFlavors{
        x0{}
        x1{}
        x2{}
        x3{}
        x4{}
        x5{}
        x6{}
        x7{}
        x8{}
        x9{}
        x10{}
        x11{}
        x12{}
        x13{}
        x14{}
        x15{}
        x16{}
        x17{}
        x18{}
        x19{}
        x20{}
        x21{}
        x22{}
        x23{}
        x24{}
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all({ variant ->
        variant.outputs.each({ output ->
            def outputFile = output.outputFile
            if (!variant.getBuildType().isDebuggable() && outputFile != null && outputFile.name.endsWith('.apk'))
            {
//                def newSuffix = "-" + getTime() + "-v${variant.productFlavors[0].versionName}.apk"
                def newSuffix = "-" + getTime() + ".apk"
                println "文件名：" + outputFile.name
                def flavorName = variant.productFlavors[0].name
                def oldPrefix = "app-" + flavorName + "-release"
                def newPrefix = "小乐乐" + flavorName
                output.outputFile = new File(outputFile.parent, outputFile.name.replace(oldPrefix, newPrefix).replace("app-", "").replace(".apk", newSuffix))
            }
        })
    })
}

String getTime()
{
    String time = new SimpleDateFormat("MMddHH").format(new Date(System.currentTimeMillis()))
    return time;
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test:runner:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestCompile('com.android.support.test:rules:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'design'
    })
    compile 'com.android.support:appcompat-v7:23.4.0'
//    compile project(':auto')

    //网络请求、解析、数据监控框架
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'org.greenrobot:greendao:3.1.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    debugCompile 'com.facebook.stetho:stetho:1.4.2'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
}
